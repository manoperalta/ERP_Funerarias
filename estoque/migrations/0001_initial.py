# Generated by Django 5.2.5 on 2025-08-31 06:47

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True, verbose_name='Nome da Categoria')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('cor', models.CharField(default='#6c757d', help_text='Cor para identificação visual (formato: #000000)', max_length=7, verbose_name='Cor da Categoria')),
                ('ativa', models.BooleanField(default=True, verbose_name='Categoria Ativa')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Categoria de Estoque',
                'verbose_name_plural': 'Categorias de Estoque',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ProdutoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único para identificação', max_length=50, unique=True, verbose_name='Código do Produto')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Produto')),
                ('descricao', models.TextField(blank=True, null=True, verbose_name='Descrição')),
                ('unidade_medida', models.CharField(choices=[('un', 'Unidade'), ('kg', 'Quilograma'), ('g', 'Grama'), ('l', 'Litro'), ('ml', 'Mililitro'), ('m', 'Metro'), ('cm', 'Centímetro'), ('m2', 'Metro Quadrado'), ('m3', 'Metro Cúbico'), ('cx', 'Caixa'), ('pct', 'Pacote'), ('dz', 'Dúzia')], default='un', max_length=5, verbose_name='Unidade de Medida')),
                ('preco_custo', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço de Custo')),
                ('preco_venda', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço de Venda')),
                ('quantidade_atual', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Atual')),
                ('quantidade_minima', models.DecimalField(decimal_places=2, default=1, help_text='Quantidade mínima para alerta de estoque baixo', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Mínima')),
                ('quantidade_maxima', models.DecimalField(blank=True, decimal_places=2, help_text='Quantidade máxima recomendada', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Quantidade Máxima')),
                ('localizacao', models.CharField(blank=True, help_text='Local onde o produto está armazenado', max_length=100, null=True, verbose_name='Localização')),
                ('ativo', models.BooleanField(default=True, verbose_name='Produto Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='estoque.categoriaestoque', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Produto de Estoque',
                'verbose_name_plural': 'Produtos de Estoque',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='MovimentacaoEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('entrada', 'Entrada'), ('saida', 'Saída'), ('ajuste', 'Ajuste'), ('perda', 'Perda'), ('transferencia', 'Transferência')], max_length=20, verbose_name='Tipo de Movimentação')),
                ('quantidade', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantidade')),
                ('preco_unitario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Preço Unitário')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('documento', models.CharField(blank=True, help_text='Nota fiscal, recibo, etc.', max_length=100, null=True, verbose_name='Número do Documento')),
                ('fornecedor', models.CharField(blank=True, max_length=200, null=True, verbose_name='Fornecedor/Cliente')),
                ('data_movimentacao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Movimentação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='estoque.produtoestoque', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Movimentação de Estoque',
                'verbose_name_plural': 'Movimentações de Estoque',
                'ordering': ['-data_movimentacao'],
            },
        ),
        migrations.CreateModel(
            name='AlertaEstoque',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_alerta', models.CharField(choices=[('estoque_baixo', 'Estoque Baixo'), ('estoque_alto', 'Estoque Alto'), ('produto_zerado', 'Produto Zerado'), ('vencimento', 'Próximo ao Vencimento')], max_length=20, verbose_name='Tipo de Alerta')),
                ('mensagem', models.TextField(verbose_name='Mensagem do Alerta')),
                ('ativo', models.BooleanField(default=True, verbose_name='Alerta Ativo')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_resolucao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Resolução')),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estoque.produtoestoque', verbose_name='Produto')),
            ],
            options={
                'verbose_name': 'Alerta de Estoque',
                'verbose_name_plural': 'Alertas de Estoque',
                'ordering': ['-data_criacao'],
            },
        ),
    ]
